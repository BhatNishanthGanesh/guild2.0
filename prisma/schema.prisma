// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  name      String?
  // username  String   @unique
  posts     Post[]
  profile   Profile?
  emailVerified DateTime?
  followings String[] @db.ObjectId
  Comment   Comment[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}



model Profile {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  bio       String?
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @map("user") @db.ObjectId
  @@unique([userId], name: "Profile_userId")
}

model Post {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  published Boolean  @default(false)
  title     String
  content   String?
  likeIds   String[] @db.ObjectId
  Comment   Comment[]
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String   @map("author") @db.ObjectId
}

model Comment {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  published Boolean  @default(false)
  content   String?
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String   @map("author_id") @db.ObjectId
  post      Post     @relation(fields: [postId], references: [id])
  postId    String   @map("post_id") @db.ObjectId
}



